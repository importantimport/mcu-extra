import{_ as t,o as e,c as a,V as r}from"./chunks/framework.38b76f8a.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"mcu-extra.corepalette.md","filePath":"mcu-extra.corepalette.md"}'),o={name:"mcu-extra.corepalette.md"},s=r('<p><a href="./">Home</a> &gt; <a href="./mcu-extra.html">mcu-extra</a> &gt; <a href="./mcu-extra.corepalette.html">CorePalette</a></p><h2 id="corepalette-class" tabindex="-1">CorePalette class <a class="header-anchor" href="#corepalette-class" aria-label="Permalink to &quot;CorePalette class&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CorePalette</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MCUCorePalette</span></span></code></pre></div><p><strong>Implements:</strong> MCUCorePalette</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./mcu-extra.corepalette.a1.html">a1</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> primary</td></tr><tr><td><a href="./mcu-extra.corepalette.a2.html">a2</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> secondary</td></tr><tr><td><a href="./mcu-extra.corepalette.a3.html">a3</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> tertiary</td></tr><tr><td><a href="./mcu-extra.corepalette.error.html">error</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> error</td></tr><tr><td><a href="./mcu-extra.corepalette.n1.html">n1</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> neutral</td></tr><tr><td><a href="./mcu-extra.corepalette.n2.html">n2</a></td><td></td><td>TonalPalette</td><td><strong><em>(BETA)</em></strong> neutralVariant</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><table><thead><tr><th>Method</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./mcu-extra.corepalette.contentfromcolors.html">contentFromColors(colors)</a></td><td><code>static</code></td><td><strong><em>(BETA)</em></strong></td></tr><tr><td><a href="./mcu-extra.corepalette.contentof.html">contentOf(argb)</a></td><td><code>static</code></td><td><strong><em>(BETA)</em></strong></td></tr><tr><td><a href="./mcu-extra.corepalette.fromcolors.html">fromColors(colors)</a></td><td><code>static</code></td><td><strong><em>(BETA)</em></strong></td></tr><tr><td><a href="./mcu-extra.corepalette.of.html">of(argb)</a></td><td><code>static</code></td><td><strong><em>(BETA)</em></strong></td></tr></tbody></table>',10),d=[s];function l(n,c,p,m,h,i){return e(),a("div",null,d)}const g=t(o,[["render",l]]);export{f as __pageData,g as default};
